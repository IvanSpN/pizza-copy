import React, { useContext } from 'react';

import { useSelector, useDispatch } from 'react-redux';
import { setSelectCategory, selectFilter } from '../redux/slices/filterSlice';

import {
  fetchVareniki,
  selectVarenikiData,
} from '../redux/slices/varenikiSlice';

import Categorys from '../components/Categorys';
import Sort from '../components/Sort';

import VarenikBlock from '../components/VarenikBlock/VarenikBlock';

import Skeleton from '../components/VarenikBlock/Skeleton';

function Home() {
  const dispatch = useDispatch();

  const { selectCategory, selectCategorySort, searchValue } =
    useSelector(selectFilter);
  const { items, status } = useSelector(selectVarenikiData);

  // —Å—Ç–µ–π—Ç –¥–ª—è –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
  // const [items, setItems] = React.useState([]); -—É—à–ª–æ –≤ Redux

  // —Å—Ç–µ–π—Ç –ª–æ–∞–¥–µ—Ä–∞
  // const [isLoading, setIsLoading] = React.useState(true); - –ø–µ—Ä–µ–Ω–µ—Å–ª–∏ –≤ Redux

  // —Å—Ç–µ–π—Ç –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –ø–µ—Ä–µ–¥–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –∏–∑ –º–∞—Å—Å–∏–≤–∞ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ —Ç–æ–≤–∞—Ä–∞ "–° –º—è—Å–æ–º –∏ —Ç.–¥"
  // const [selectCategory, setSelectCategory] = React.useState(0); - –ø–µ—Ä–µ–ø–∏—Å–∞–ª–∏ –Ω–∞ redux

  // const [selectCategorySort, setSelectCategorySort] = React.useState({
  //   name: '–ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏',
  //   sortProperty: 'rating',
  // }); - –ø–µ—Ä–µ–ø–∏—Å–∞–ª–∏ –Ω–∞ redux

  const getPizzas = async () => {
    const sortBy = selectCategorySort.sortProperty.replace('-', '');
    const order = selectCategorySort.sortProperty.includes('-')
      ? 'asc'
      : 'desc';
    const category = selectCategory > 0 ? `category=${selectCategory}` : '';
    const search = searchValue ? `&search=${searchValue}` : '';

    dispatch(
      fetchVareniki({
        sortBy,
        order,
        category,
        search,
      })
    );

    window.scrollTo(0, 0);
  };

  React.useEffect(() => {
    window.scroll(0, 0);

    getPizzas();
  }, [selectCategory, selectCategorySort, searchValue]);

  // –º–µ—Ç–æ–¥ –ø–æ –∫–ª–∏–∫—É –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞ "–° –º—è—Å–æ–º –∏ —Ç.–¥"
  const onClickCategory = (index) => {
    dispatch(setSelectCategory(index));
  };

  const vareniki = items.map((element) => (
    <VarenikBlock key={element.id} {...element} />
  ));

  const skeletons = [...new Array(8)].map((_, index) => (
    <Skeleton key={index} />
  ));

  return (
    <div>
      <div className="content">
        <div className="content__container">
          <div className="content__top">
            <Categorys
              onClickCategory={onClickCategory}
              selectCategory={selectCategory}
            />

            <Sort />
          </div>
          <h2 className="content__title">–í—Å–µ –≤–∞—Ä–µ–Ω–∏–∫–∏</h2>
          {status === 'error' ? (
            <div className="content__error-info">
              <h2>
                –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ <icon>üòï</icon>
              </h2>
              <p>
                –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–∞—Ä–µ–Ω–∏–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å
                –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ.
              </p>
            </div>
          ) : (
            <div className="content__items">
              {status === 'loading' ? skeletons : vareniki}
            </div>
          )}
        </div>
      </div>
    </div>
  );
}

export default Home;
